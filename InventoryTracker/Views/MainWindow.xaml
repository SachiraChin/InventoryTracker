<Window x:Class="InventoryTracker.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InventoryTracker"
        xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
        xmlns:helpers="clr-namespace:InventoryTracker.Helpers"
        mc:Ignorable="d"
        Title="Inventory Manager" Height="450" Width="800" WindowStartupLocation="CenterScreen" WindowState="Maximized"
        DataContext="{Binding MainViewModel, Source={StaticResource Locator}}">

    <Window.Resources>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <helpers:EventToCommand Command="{Binding ViewLoadedCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150"></ColumnDefinition>
                    <ColumnDefinition Width="150"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Region"></TextBlock>
                <TextBlock Grid.Column="1" Text="Division"></TextBlock>
                <TextBlock Grid.Column="2" Text="Search"></TextBlock>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150"></ColumnDefinition>
                    <ColumnDefinition Width="150"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="100"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ComboBox ItemsSource="{Binding SearchFilteredRegions, Mode=TwoWay}" DisplayMemberPath="RegionName" SelectedValuePath="RegionId" SelectedValue="{Binding SearchRegionId, Mode=TwoWay}"></ComboBox>
                <ComboBox Grid.Column="1" ItemsSource="{Binding SearchFilteredDivisions, Mode=OneWay}" DisplayMemberPath="DivisionName" SelectedValuePath="DivisionId" SelectedValue="{Binding SearchDivisionId, Mode=TwoWay}"></ComboBox>
                <TextBox Grid.Column="2" Text="{Binding SearchText, Mode=TwoWay}" VerticalContentAlignment="Center"></TextBox>
                <Button Grid.Column="3" Command="{Binding SearchCommand}">Search</Button>
            </Grid>
        </Grid>
        <Grid Grid.RowSpan="2" Grid.Column="0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
            </Grid.RowDefinitions>
            <DataGrid ItemsSource="{Binding InventoryItems, Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" IsEnabled="{Binding EnableInventoryItems, Mode=OneWay}" SelectedItem="{Binding SelectedInventoryItem, Mode=TwoWay}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Id" Binding="{Binding InventoryItemId, Mode=OneWay}" IsReadOnly="True" Width="50"></DataGridTextColumn>
                    <DataGridTextColumn Header="Borrower Name" Binding="{Binding BorrowerName, Mode=TwoWay}" Width="200"></DataGridTextColumn>
                    <DataGridTextColumn Header="Borrower NIC" Binding="{Binding BorrowerNIC, Mode=TwoWay}" Width="100"></DataGridTextColumn>
                    <DataGridTextColumn Header="Item Serial Number" Binding="{Binding ItemSerialNumber, Mode=TwoWay}" Width="150"></DataGridTextColumn>
                    <DataGridTextColumn Header="Item Type" Binding="{Binding ItemType, Mode=TwoWay}" Width="100"></DataGridTextColumn>
                    <DataGridComboBoxColumn Header="Region" 
                                            SelectedItemBinding="{Binding Region, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                            SelectedValuePath="RegionId" 
                                            DisplayMemberPath="RegionName" 
                                            Width="200">

                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Regions, RelativeSource={RelativeSource AncestorType=Window}}" />
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Regions, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                    </DataGridComboBoxColumn>
                    <DataGridComboBoxColumn Header="Division" 
                                            SelectedItemBinding="{Binding Division, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" 
                                            SelectedValuePath="DivisionId" 
                                            DisplayMemberPath="DivisionName" 
                                            Width="200">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding Divisions, Mode=OneWay}" />
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding Divisions, Mode=OneWay}" />
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                    </DataGridComboBoxColumn>
                    <DataGridTextColumn Header="Unit" Binding="{Binding Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100"></DataGridTextColumn>
                    <DataGridTemplateColumn Header="Borrowed Date" Width="150">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding BorrowedDate, Mode=OneWay, StringFormat=d}" IsEnabled="False" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding BorrowedDate, Mode=TwoWay}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridCheckBoxColumn Header="Returned" Binding="{Binding Returned, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="70"></DataGridCheckBoxColumn>
                    <DataGridTemplateColumn Header="Returned Date" Width="150">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ReturnedDate, Mode=OneWay, StringFormat=d}" IsEnabled="False" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding ReturnedDate, Mode=TwoWay}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Button Grid.Row="1" IsEnabled="{Binding EnableInventoryItems, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding SaveInventoryItemsCommand}">Save Inventory</Button>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
            </Grid.RowDefinitions>
            <DataGrid ItemsSource="{Binding Regions, Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" IsEnabled="{Binding EnableRegions, Mode=OneWay}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Region Id" Binding="{Binding RegionId, Mode=OneWay}" IsReadOnly="True" Width="80"></DataGridTextColumn>
                    <DataGridTextColumn Header="Region Name" Binding="{Binding RegionName, Mode=TwoWay}" Width="400"></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Button Grid.Row="1" IsEnabled="{Binding EnableRegions, Mode=OneWay}" Command="{Binding SaveRegionsCommand}">Save Regions</Button>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
            </Grid.RowDefinitions>
            <DataGrid ItemsSource="{Binding Divisions, Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" IsEnabled="{Binding EnableDivisions, Mode=OneWay}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Division Id" Binding="{Binding DivisionId, Mode=OneWay}" IsReadOnly="True" Width="80"></DataGridTextColumn>
                    <DataGridTextColumn Header="Division Name" Binding="{Binding DivisionName, Mode=TwoWay}" Width="200"></DataGridTextColumn>
                    <DataGridComboBoxColumn Header="Region" 
                                            SelectedItemBinding="{Binding Region, Mode=TwoWay}" 
                                            SelectedValuePath="RegionId" 
                                            DisplayMemberPath="RegionName" 
                                            Width="200">

                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Regions, RelativeSource={RelativeSource AncestorType=Window}}" />
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Regions, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                    </DataGridComboBoxColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Button Grid.Row="1" IsEnabled="{Binding EnableRegions, Mode=OneWay}" Command="{Binding SaveDivisionsCommand}">Save Divisions</Button>
        </Grid>
    </Grid>
</Window>
